add_newline = false

# Order of modules on prompt
format = """\
        $directory\
        (↓ Source control - for right side ↓)\
        $git_branch\
        $git_commit\
        $git_status\
        $git_state\
        (↑ Source control - for right side ↑)\
        (↓ Toolchain version modules ↓)\
        (↑ Toolchain version modules ↑)\
        (↓ Package modules ↓)\
        $line_break\
        (↓ on input line ↓)\
        $status\
        $character\
        $python\
        $package\
    """

# Generic prompt configurations
[character]
success_symbol = "[[](bg:#AFD700 fg:#3a3a3a)](fg:#AFD700)"
error_symbol = "[[](bg:#ff3322 fg:#3a3a3a)](fg:#ff3322)"
vicmd_symbol = "[[](bg:#6f6a70 fg:#3a3a3a)[](bg:#3a3a3a fg:#6f6a70)](bold bg:#6f6a70 fg:#ff3322)"
format = "[[](bg:#3a3a3a)$symbol]($style)"

[line_break]
disabled = true

[directory]
style = "italic bg:#EEEEEE fg:#3a3a3a"
read_only = ""
read_only_style = "bg:#3a3a3a fg:#3a3a3a"
truncation_length = 1
truncation_symbol = "/"
fish_style_pwd_dir_length = 1
format = "([[](bg:#3a3a3a fg:#3a3a3a)$read_only[](bg:#3a3a3a fg:#3a3a3a)]($read_only_style))[[](bg:#3a3a3a fg:#3a3a3a)$path]($style)"

[directory.substitutions]
"~/Downloads" = " "
"~/projects" = " "
"~" = ""

[git_branch]
symbol = ""
style = "bg:#008700 fg:#dadada"
# truncation_length = 4
# truncation_symbol = ""
format = "[[](bg:#3a3a3a fg:#008700)$symbol$branch[](bg:#3a3a3a fg:#008700)]($style)"

[git_commit]
style = "bg:#E58F73 fg:#111111"
commit_hash_length = 4
# only_detached = true
format = "[[](bg:#3a3a3a fg:#E58F73)#$hash[](bg:#3a3a3a fg:#E58F73)]($style)"

[git_state]
style = "bg:#E0B25D fg:111111"
rebase = "rebasing"
merge = "merging"
revert = "reverting"
cherry_pick = " picking"
bisect = "bisecting"
am = "am'ing"
am_or_rebase = "am/rebase"
format = '\([[](bg:#3a3a3a fg:#E0B25D)$state($progress_current/$progress_total)[](bg:#3a3a3a fg:#E0B25D)]($style)\)'

[git_status]
style = "bg:#5f5fdf fg:#EEEEEE"
stashed = "${count}"
ahead = "ﲗ${count}"
behind = "↡ ${count}"
diverged = "↔ ${ahead_count} ${behind_count}"
conflicted = "≠${count}"
deleted = "${count}"
renamed = "r${count}"
modified = "${count}"
staged = "⎆ ${count}"
untracked = "⇪ ${count}"
format = "([[](bg:#3a3a3a fg:#5f5fdf)$all_status[](bg:#3a3a3a fg:#5f5fdf)]($style))"

[status]
disabled = false
symbol = ""
style = "bg:#3a3a3a fg:#ff3322"
format = "[$symbol$status]($style)"

[python]
# Display the version of python from inside a local venv.
#
# Note this will only work when the venv is inside the project and it will only
# work in the directory that contains the venv dir but maybe this is ok?
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
symbol =""

[package]

